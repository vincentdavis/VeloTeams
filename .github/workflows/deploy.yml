name: Deploy Django App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create .env file
      run: |
        echo "DJANGO_SETTINGS_MODULE=config.settings.production" >> .django
        echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .django
        echo "DJANGO_ADMIN_URL=${{ secrets.DJANGO_ADMIN_URL }}" >> .django
        echo "DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}" >> .django
        echo "DJANGO_SECURE_SSL_REDIRECT=${{ secrets.DJANGO_SECURE_SSL_REDIRECT }}" >> .django
        echo "DJANGO_SERVER_EMAIL=${{ secrets.DJANGO_SERVER_EMAIL }}" >> .django
        echo "SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}" >> .django
        echo "SENDGRID_GENERATE_MESSAGE_ID=${{ secrets.SENDGRID_GENERATE_MESSAGE_ID }}" >> .django
        echo "SENDGRID_MERGE_FIELD_FORMAT=${{ secrets.SENDGRID_MERGE_FIELD_FORMAT }}" >> .django
        echo "DJANGO_DEFAULT_FROM_EMAIL=${{ secrets.DJANGO_DEFAULT_FROM_EMAIL }}" >> .django
        echo "ADMINS=${{ secrets.ADMINS }}" >> .django
        echo "DJANGO_ACCOUNT_ALLOW_REGISTRATION=${{ secrets.DJANGO_ACCOUNT_ALLOW_REGISTRATION }}" >> .django
        echo "REDIS_URL=${{ secrets.REDIS_URL }}" >> .django
        echo "MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }}" >> .django
        echo "MAILGUN_DOMAIN=${{ secrets.MAILGUN_DOMAIN }}" >> .django
        echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> .django
        echo "WEB_CONCURRENCY=4" >> .django

        echo "POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}" >> .postgres
        echo "POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}" >> .postgres
        echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .postgres
        echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .postgres
        echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .postgres

    - name: Add SSH known hosts
      run: |
        mkdir -p ~/.ssh
        touch ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to server
      run: |
        echo "${{ secrets.SERVER_SSH_KEY }}" > deploy_key
        chmod 600 deploy_key

        # Create necessary directories on the remote server
        ssh -i deploy_key root@${{ secrets.SERVER_HOST }} "mkdir -p /home/.envs/.production/;"

        # Copying Environment
        scp -i deploy_key .django root@${{ secrets.SERVER_HOST }}:/home/.envs/.production/
        scp -i deploy_key .postgres root@${{ secrets.SERVER_HOST }}:/home/.envs/.production/

        ssh -i deploy_key root@${{ secrets.SERVER_HOST }} <<'ENDSSH'
          rm -rf /home/VeloTeams  # Caution: This removes the existing directory
          git clone https://github.com/karthicksakkaravarti/VeloTeams.git /home/VeloTeams
          cd /home/VeloTeams
          cp -rf ../.envs .
          docker-compose -f production.yml build
          docker-compose -f production.yml up -d
        ENDSSH
      env:
        SERVER_SSH_KEY: ${{ secrets.SERVER_SSH_KEY }}
